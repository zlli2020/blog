[
  {
    "path": "posts/2021-01-27-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "DataViz Makeover 1",
    "author": [
      {
        "name": "Li Zhenglong",
        "url": {}
      }
    ],
    "date": "2021-01-27",
    "categories": [],
    "contents": "\r\n\r\nContents\r\n1.0 Critiques and Suggestions1.1 Clarity\r\n1.2 Aesthetic\r\n\r\n2.0 Sketch of Proposed Design\r\n3.0 Data Visualization Step-by-step guide3.1 Data preparation\r\n3.2 Create Arrow Chart\r\n3.3 Create Sparklines\r\n3.4 Combining into Dashboard\r\n\r\n4.0 Major observations\r\n\r\n1.0 Critiques and Suggestions\r\n1.1 Clarity\r\nS/N\r\nCritiques\r\nSuggestions\r\n1\r\nThe summary write-up described the increase in the proportion of labour force using age group of 55 & over and 25 to 54. However, the age group for the graph is using an interval of 5. Thus, making it hard to link the lead in with the graph.\r\nTo use a consistent interval of age groups in both graph and text. The lead-in write up will summarize the data visualization as Dashboard title\r\n2\r\nThe title “Resident labour force by age - Per Cent” did not effectively communicate clearly if the measure used is by percentage proportion breakdown, participation rate, or difference in percentage change over the years.\r\nTo reflect the measuring unit LFPR and the comparison between 2009 and 2019.Chart title will explicitly state the measure and breakdown as “Percentage change in LFPR by Age Group - 2009 versus 2019”\r\n3\r\nThe line chart does not have an explicit Y-axis scale. Without the Y-axis, the figures cannot be ascertained and the measure is not clear.The X-axis can also be clearer with Age group label.\r\nAdd explicit Y-axis scale and label and X-Axis label in chart title for better clarity.\r\n4\r\nHaving only a snapshot comparing 2009 and 2019 can be misleading. We do not know if the changes are consistent between 2009 to 2019.\r\nAdd sparklines to show a quick trend of each age group category.\r\n5\r\nThe line graph may not be effectively used for the categorical data. It may unintendedly emphasize the change between the age groups instead of the comparison of the two years.\r\nReplace with categorial charts using an arrow chart(similar effect as a bar chart highlighting the differences) to emphasize the change in 2009 and 2019.\r\n6\r\nThe median age reference line is misleading as the X-axis point is used as the actual age mark in the graph\r\nTo remove median age and reference line from the chart.\r\n1.2 Aesthetic\r\nS/N\r\nCritiques\r\nSuggestions\r\n1\r\nThe graph shows the redundant year 2009 and 2019 three times. These unnecessary non-data-inks add distraction to the graph.\r\nReduce the number of year labels appropriately.\r\n2\r\nNo contrasting colors for comparison. The color grey and blue are similar and dull and could be hard for viewers with color blindness.\r\nUse contrasting color-blind friendly colors such as red and blue colors to highlight differences appropriately.\r\n3\r\nNon-data-ink such as the dark color table and bolding of the X-axis divert focus away from the line chart.\r\nRemove dark color table and un-bold axis label.\r\n4\r\nToo much different information in a single chart diverts the key points.\r\nRemove unnecessary chart objects\r\n2.0 Sketch of Proposed Design\r\n3.0 Data Visualization Step-by-step guide\r\n3.1 Data preparation\r\n3.1.1 Pre-import data prep\r\nCopy the data from Excel sheet “T5_T” in mrsd_2019LabourForce_T5.xlsx into the new sheet Data. Remove the empty columns and format the records as shown.\r\n3.1.1 Import data into Tableau\r\nImport sheet “Data” from Excel into Tableau.\r\nSet field names are in first row.\r\nSelect column 2009 to 2019 and right click set pivot.\r\n3.1.2 Rename pivoted columns\r\nRename column Pivot Field Names to Year\r\nRename column Pivot Field Values to LFPR %\r\nFormat Year as date\r\n3.2 Create Arrow Chart\r\n3.2.1 Drag and drop the dimensions and measure\r\nDrag Age group to Columns\r\nDrag Year to Filters, select only 2009 and 2019.\r\nDrag LFPR % to Rows\r\nSet Marks as line chart\r\nDrag Year to Path ### 3.2.2 Create Calculated Fields\r\nAnalysis -> Create Calculated Fields -> Direction. This is to get the difference of LFPR % of 2019 – 2009 to set the color and shape of the arrow chart. Click on Default Table Calculation to set the definition compute as Year and At the level year of year\r\nCreate new Calculated Field, Shape\r\n3.2.3 Create Shape and dual axis\r\nDrag **LFPR %* *to Rows again\r\nSet Marks as Shape\r\nDrag Year to detail\r\nApply Dual Axis\r\n3.2.4 Create Arrow Head\r\nCreate new Calculated Field call shape and set positive or negative based on the [Direction] created earlier.\r\nDrag field Shape into both Color and change the colour to red and blue\r\nDrag field Shape again to shape (mark) and change shape palette to filled - triangle up and down for + and - respectively\r\n3.2.5 Remove the extra triangle\r\ni)To remove the extra triangle, create new calculated field call Size of Shape ii)Drag this new field to Size and this will change the shape sizes are not [Year] = 2019 and set size as 0 which making the triangle disappear.\r\n3.2.6 Complete the Arrow\r\nTo change synchronize the line colour, select line Mark and drag Shape to Color. Click on Color and set markers to all. This will put the dot to better represent the starting point 2009.\r\nSynchronize the Right Y axis.\r\nClick on Size to increase the arrow line.\r\n3.2.7 Add in the % label\r\nSelect Shape Mark and drag Direction to Label\r\nUnder label appearance edit label <AGG(Direction)> % to add %.\r\nUnder font click match Mark color\r\nAlignment set to Center and Top\r\nHide repeated values in the Chart by setting the Mark Label “Never Show”.\r\nRemove the Right Y Axis\r\n3.2.7 Title and formatting\r\nHide all cards on the left to remove the filter/legends\r\nInsert caption for source and X Axis Source: Table 5: RESIDENT LABOUR FORCE PARTICIPATION RATE BY AGE AND SEX, 2009 - 2019 (JUNE)\r\nIn format, add grid lines and remove row divider.\r\n3.3 Create Sparklines\r\n3.3.1 Create line chart as base\r\nDrag Year to column, and Age group and LFPR % to Rows\r\nEdit axis to change the Range to Independent axis ranges for each row. So the sparklines will be more obvious.\r\nSort the Age group by Descending order and hide the Y axis.\r\nFrom Color set markers to All to show the dots.\r\nRemove the row grid lines and column dividers using format.\r\nChange title to Year-on-Year LFPR to and align center.\r\nRemove x-axis header\r\nDrag Year into label and set mark to label as min/max Remove all point except for bottom age group as shown.\r\n3.4 Combining into Dashboard\r\n3.4.1 Create new dashboard\r\nDrag Arrow graph to the canvas\r\nDrag Sparklines to the right of arrow graph\r\nDrag image object import arrow image[custom image] to bottom right of arrow graph as legend\r\nAnd drag text objects beside the arrow and key as 2009 and 2019\r\n3.4.2 Annotation, Title size and white space alignment\r\nAdd text objects annotation for both charts to highlight the info.\r\nOlder age groups show higher increase in %\r\nYounger age groups show more fluctuations in their LFPR\r\nDashboard title size change to size 15\r\nChart titles change to size 12\r\nAdd blank objects to align the charts.\r\n4.0 Major observations\r\nOlder age group have a higher increase in LFPR compared to the younger age group.\r\nYOY for age bands 30 and above shows gradual changes. However, for age band 15-19, 20-24 and 25-29, we can observe more fluctuations in their LFPR.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-28T01:01:20+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/2021-01-04-my-first-post/",
    "title": "My First R Markdown Document",
    "description": "A new article created using the Distill format.",
    "author": [
      {
        "name": "Dr. Kam Tin Seong",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-05",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-05T20:29:29+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Li Zhenglong",
        "url": {}
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-04T21:05:07+08:00",
    "input_file": {}
  }
]
